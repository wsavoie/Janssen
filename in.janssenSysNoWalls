#input params are npm and R
#tSteps     = number of timesteps for filling
#R          = radius of cylinder
#nParts     = number of particles
# lmp_serial -var tSteps 45000 -var R 5 -var nParts 800 < in.janssenSysNoWalls
atom_style	sphere
boundary	f f f
newton		off

comm_modify	vel yes
neighbor	0.2 bin
# neigh_modify	delay 0
variable        w2 equal 10
variable        h2 equal 75

variable d1             equal 1.0   #cylinder material
variable d2             equal 1.0   #measure material
variable d3             equal 1.0   #poured material
variable fcSp           equal 10
variable fcSp2          equal 5
# variable R            equal 3.5
variable in_cylr        equal "v_R+v_d1/2"
variable out_cylr       equal "v_R"
variable sysCylSize     equal "v_R+4*v_d1"
variable sysCylH        equal "v_h2+5"


region sys cylinder z    0 0 ${sysCylSize} -2 ${sysCylH} units box       #rad=4
# region measure block -${R} ${R} -${R} ${R} 0 0 units box
create_box	4 sys

#########bottom plate##############
lattice fcc ${fcSp} origin 0 0 0
variable r1 equal "v_d1*2/3"
variable b equal "(-v_d1/4.0)"
variable rn equal "v_R-v_d1/4.0"
# region measure block -${R} ${R} -${R} ${R} -0.25 0 units box
region measure cylinder z    0 0 ${rn} -0.25 0 units box
# create_atoms	2 region measure

# set type 2 diameter ${d1}
group measure region measure

#########poured material##############
variable bottomFill equal "v_h2-5.0"
lattice fcc ${d3} origin 0 0 0
variable rn equal "v_R-2*v_d1/2"
#create_atoms 3 box
region pouredParts cylinder z 0 0 ${rn} ${bottomFill} ${h2} units box side in
#set type 3 diameter ${d3}
group pouredParts type 3

variable k0     equal 0.1633 #if change sim params must change this!
variable mup    equal 0.5
variable muw    equal 0.5
variable kn     equal "2*10^6*v_k0"

variable kt     equal "2/7*v_kn" # 2/7kn or 2/(7kn) check this value!
variable g_n    equal "50"
variable g_t    equal "50"

#for filling time, pourSteps~partNums,  pourSteps = 11*partNums-110 
variable pourSteps equal "v_tSteps"


# variable nParts equal "v_nParts" 
variable nPartsSTR    string ${nParts}
shell mkdir r=${R}
shell mkdir r=${R}/${nPartsSTR}
#####add gravity to poured particles#######
fix		2 pouredParts gravity 1.0 spherical 0.0 -180.0

#set sim params
##from pdf, maybe should change stiffness to 2e5?
# http://lammps.sandia.gov/doc/units.html units in lammps
#lj units


timestep .001
run_style verlet
fix		6 all nve/sphere  #integrator type

region cylout cylinder z    0 0 ${R} 0 ${sysCylH} units box       #rad=4


pair_style gran/hertz/history ${kn} ${kt} ${g_n} NULL ${mup} 1

fix		wallout all wall/gran hertz/history ${kn} ${kt} ${g_n} ${g_t} ${mup} 1 zcylinder ${R}   #integrator type
fix    	bott    all wall/gran hertz/history ${kn} ${kt} ${g_n} ${g_t} ${mup} 1 zplane 0 NULL  #integrator type

# fix		bott all wall/gran hertz/history ${kn} ${kt} ${g_n} ${g_t} ${mup} 1
#http://lammps.sandia.gov/doc/fix_wall_gran.html

pair_coeff	* *

region px block 0               ${sysCylSize}   -${sysCylSize} ${sysCylSize} 0 ${h2} units box
region mx block -${sysCylSize}  0               -${sysCylSize} ${sysCylSize} 0 ${h2} units box

region py block -${sysCylSize} ${sysCylSize}    0              ${sysCylSize} 0 ${h2} units box
region my block -${sysCylSize} ${sysCylSize}    -${sysCylSize} 0             0 ${h2} units box


# group px dynamic cyl region px
# group py dynamic cyl region py
# group mx dynamic cyl region mx
# group my dynamic cyl region my


variable p1 equal f_wallout
variable p2 equal f_bott

compute		1 all erotate/sphere
#######pour in particles
fix		ins pouredParts pour ${nParts} 3 300719 vol 0.20 100 region pouredParts
thermo_style	custom step atoms ke c_1 v_p1 v_p2
thermo		100

thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes
variable ep equal  1
variable sig equal  1
variable rr equal  1


#fix bott            all wall/lj93 zlo 0.25 ${ep} ${sig} ${rr}
#ix		wallout  all wall/region cylout lj93 ${ep} ${sig} ${rr}   #integrator type\



fix forcePrint measure print ${pourSteps} "${p1} ${p2}" file r=${R}/${nPartsSTR}/forces.txt screen no
dump		1 all movie 100 r=${R}/${nPartsSTR}/FillContainer.mpg type type &
            axes yes 0.8 0.02 view 80 -30  #80 -30
dump_modify 1 adiam 1 ${d1} adiam 2 ${d2} adiam 3 ${d3}


variable ss equal step



# fix forcePrint measure print ${pourSteps} "${p1} ${p2} ${p3}" file r=${R}/${nPartsSTR}/forces.txt screen no
# fix WallForcePrint all print 100 "${ss} ${fx} ${fy} ${fz}" file r=${R}/${nPartsSTR}/cylForces.txt screen no  

run		${pourSteps}

write_dump all custom r=${R}/${nPartsSTR}/lastFramePour.txt id type x y z fx fy fz
undump 1

group px1 region px
group mx1 region mx
# compute 55 pouredParts
run 1


##############################new press stuff############################
# group px  region px
# group py  region py
# group mx  region mx
# group my  region my

group vg region pouredParts
print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"

# lattice fcc ${d3} origin 0 0 0
variable rn2 equal "v_R-v_d1"
 # region crushCyl cylinder z 0 0 ${rn2} ${bottomFill} ${h2} units box side in
create_atoms 4 region pouredParts

# set type 4 diameter ${d3}
group t4 type 4
fix 9 t4 rigid single 
# group vg3 union vg t4
 fix		10 t4 gravity 1.0 spherical 0.0 -180.0

# region pouredParts cylinder z 0 0 ${rn} ${bottomFill} ${h2} units box side in
# compute		10 all erotate/sphere
# compute     2 pouredParts group/group measure

# compute        peratom all stress/atom NULL
# compute        p all reduce sumsq c_peratom[1] c_peratom[2]
# variable       press equal sqrt(abs(c_p[1]))
# thermo_style   custom step temp etotal press v_press
variable crushsteps equal 30000

######
#todo
#1. change interaction so it cannot get stuck on wall?
#2. finish matlab reading crush code
#3. create new molecule sizes
######                                                    
# fix crushPrint px1 print 100 ${fx} file r=${R}/${nPartsSTR}/crushforces.txt screen no
###################
variable outerParts equal "v_R-1"
region cylout2 cylinder z    0 0 ${outerParts} 0 ${sysCylH} side out units box      #rad=4
group viz region cylout2
write_dump all custom r=${R}/${nPartsSTR}/lastFrameCrush.txt id type x y z fx fy fz

dump		2 viz movie 100 r=${R}/${nPartsSTR}/crushMovie.mpg type type &
	            axes yes 0.8 0.02 view 80 -30  #80 -30
	
	# dump		1 all movie 100 r=${R}/${nPartsSTR}/crushMovie.mpg type type &
    #        axes yes 0.8 0.02 view 80 -30  #80 -30
# dump_modify 1 adiam 1 ${d1} adiam 2 ${d2} adiam 3 ${d3} adiam 4 ${d3}
run		${crushsteps}

# write_dump px custom r=${R}/${nPartsSTR}/lastFrameCrush1.txt id type x y z fx
# write_dump mx custom r=${R}/${nPartsSTR}/lastFrameCrush2.txt id type x y z fx
# write_dump py custom r=${R}/${nPartsSTR}/lastFrameCrush3.txt id type x y z fy
# write_dump my custom r=${R}/${nPartsSTR}/lastFrameCrush4.txt id type x y z fy
