#input params are npm and R
#tSteps     = number of timesteps for filling
#R          = radius of cylinder
#nParts     = number of particles
# lmp_serial -var tSteps 45000 -var R 5 -var nParts 800 -var file "mol.jan" < in.janssen
atom_style	sphere
atom_modify map hash
boundary	f f f
newton		off

print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"
comm_modify	vel yes
neighbor	0.2 bin
# neigh_modify	delay 0
variable        h2 equal 105

variable d1             equal 1.0   #cylinder material
variable d2             equal 1.0   #measure material
variable d3             equal 1   #poured material
variable fcSp           equal 1

variable sysCylSize     equal "v_R+4*v_d1"
variable sysCylH        equal "v_h2+5"
variable pourSteps      equal "v_tSteps"

region sys cylinder z    0 0 ${sysCylSize} -2 ${sysCylH} units box       #rad=4
# region measure block -${R} ${R} -${R} ${R} 0 0 units box
create_box	4 sys
molecule mol1 ${file}

#########poured material##############
variable bottomFill equal "v_h2-15.0"
lattice fcc ${fcSp} origin 0 0 0
variable rn equal "v_R-2*v_d1"
region pouredParts cylinder z 0 0 ${rn} ${bottomFill} ${h2} units box side in
group pouredParts type 3

variable k0     equal 0.1633 #if change sim params must change this!
variable mup    equal 0.5
variable muw    equal 0.5
variable kn     equal "2*10^6*v_k0"

variable kt     equal "2/7*v_kn" # 2/7kn or 2/(7kn) check this value!
variable g_n    equal "50"
variable g_t    equal "50"

# shell mkdir MOLr=${R}/${nPartsSTR}
variable mainDir string ${file}-r=${R}
variable nPartsSTR    string ${nParts}
shell mkdir ${mainDir}
shell mkdir ${mainDir}/${nPartsSTR}
shell cp ${file} ${mainDir}/${nPartsSTR}/${file}
pair_style gran/hertz/history ${kn} ${kt} ${g_n} NULL ${mup} 1
pair_coeff	* *

fix		2 pouredParts gravity 1.0 spherical 0.0 -180.0
fix		6 all nve/sphere  #integrator type
fix		wallout all wall/gran hertz/history ${kn} ${kt} ${g_n} ${g_t} ${mup} 1 zcylinder ${R}   #integrator type
fix    	bott    all wall/gran hertz/history ${kn} ${kt} ${g_n} ${g_t} ${mup} 1 zplane 0 NULL  #integrator type

fix     rigidMol pouredParts rigid/small molecule mol mol1 
fix		ins pouredParts pour ${nParts} 1 300719 vol 0.20 100 region pouredParts mol mol1 rigid rigidMol

timestep .001
run_style verlet


variable p1 equal f_wallout
variable p2 equal f_bott

compute		1 all erotate/sphere
compute 2 all temp/sphere
compute_modify	thermo_temp dynamic yes

thermo_style	custom step atoms ke c_1 v_p1 v_p2
thermo		100
thermo_modify	lost ignore norm no
thermo_modify  temp 2


fix forcePrint all print ${pourSteps} "${p1} ${p2}" file ${mainDir}/${nPartsSTR}/forces.txt screen no
dump		1 all movie 100 ${mainDir}/${nPartsSTR}/FillContainer.mpg type type &
            axes yes 0.8 0.02 view 80 -30  #80 -30
dump_modify 1 adiam 1 ${d1} adiam 2 ${d2} adiam 3 ${d3}
run		${pourSteps}


write_dump all custom ${mainDir}/${nPartsSTR}/lastFramePour.txt id type x y z fx fy fz
undump 1
run 1
##############################crush code############################
# print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"
variable temp equal bound(pouredParts,zmax)
variable crushMin equal "v_temp+2"
variable crushMax equal "v_crushMin+5"
variable Rcrush equal "v_R-.5"

region crushCyl cylinder z 0 0 ${Rcrush} ${crushMin} ${crushMax} units box side in
lattice fcc ${d1} origin 0 0 0

create_atoms 2 region crushCyl

group t2 type 2
fix 9 t2 rigid single 
fix		10 t2 gravity 1.0 spherical 0.0 -180.0

variable crushsteps equal 30000

write_dump all custom ${mainDir}/${nPartsSTR}/lastFrameCrush.txt id type x y z fx fy fz
fix crushPrint all print ${crushsteps} "${p1} ${p2}" file ${mainDir}/${nPartsSTR}/crushforces.txt screen no
dump		2 all movie 100 ${mainDir}/${nPartsSTR}/crushMovie.mpg type type &
	            axes yes 0.8 0.02 view 80 -30  #80 -30
dump_modify 2 adiam 1 ${d1} adiam 2 ${d2} adiam 3 ${d3}
run		${crushsteps}

