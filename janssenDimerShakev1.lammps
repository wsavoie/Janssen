#input params are npm and R
#tSteps     = number of timesteps for filling
#R          = radius of cylinder
#nParts     = number of particles
# lmp_serial -var tSteps 45000 -var R 5 -var nParts 800 -var file "mol.jan" < in.janssen
atom_style	sphere
atom_modify map hash
boundary	f f fm
newton		off


comm_modify	vel yes mode single cutoff 11
# neighbor	0.2 bin
#neigh_modify	delay 0
variable        h2 equal 100
fix             prop all property/atom mol ghost yes
print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"

variable d1             equal 1.0   #cylinder material
variable d2             equal 1.0   #measure material
variable d3             equal 1   #poured material
variable fcSp           equal 1
variable diam           equal 0.5
variable sysCylSize     equal "v_R+4*v_d1"
variable sysCylH        equal "v_h2+15"


region sys cylinder z    0 0 ${sysCylSize} -2 ${sysCylH} units box       #rad=4
# region measure block -${R} ${R} -${R} ${R} 0 0 units box
create_box	4 sys
print "${file}"
molecule mol1 ${file}

#########poured material##############

variable bottomFill equal "v_h2-65"
lattice fcc ${fcSp} origin 0 0 0
variable rn equal "v_R-10*v_d1"
region pouredParts cylinder z 0 0 ${rn} ${bottomFill} ${h2} units box side in
group pouredParts type 3

variable dtt equal .001
variable randVar equal "v_randz"
variable k0     equal .1633 #if change sim params must change this! I CHANGED THIS
variable mup    equal 0.25
variable muw    equal 0.5
variable kn     equal "2*10^6*v_k0"

variable kt     equal "2/7*v_kn"
variable g_n    equal "50"
#variable g_n    equal "2700"
#variable g_t    equal "50"
variable gravz equal 1
variable tau equal "0.024731"
variable onesec equal "v_tau/v_dtt"
variable freq equal "30/v_onesec"
variable omega equal "v_tau*2*PI*v_freq"
#variable maxAmp equal "2*v_gravz/(v_omega*v_omega)"
variable maxAmp equal "4*(v_omega*v_omega)/v_gravz"
variable period equal "1/(v_freq)"
variable totOsc equal "600"
variable crushsteps equal "round(v_totOsc*v_period/v_dtt)"
variable settleTime equal "v_tSteps"

timestep ${dtt}

# shell mkdir MOLr=${R}/${nPartsSTR}
variable mainDir string ${file}_r=${R}_${app}
variable nPartsSTR    string ${nParts}
shell mkdir ${mainDir}
shell mkdir ${mainDir}/${nPartsSTR}
shell cp ${file} ${mainDir}/${nPartsSTR}/${file}
pair_style gran/hertz/history ${kn} NULL ${g_n} NULL ${mup} 1
pair_coeff	* *

fix		2 pouredParts gravity ${gravz} spherical 0.0 -180.0
# fix		6 all nve/sphere  #integrator type
fix		wallout all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zcylinder ${R}   #integrator type
fix    	bott    all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zplane 0 NULL  #integrator type

fix     rigidMol pouredParts rigid/small molecule mol mol1 
neigh_modify exclude molecule all
fix		ins pouredParts pour ${nParts} 0 ${randVar} vol 15.5 100 region pouredParts mol mol1 rigid rigidMol
variable pourTime equal f_ins
variable pourSteps      equal "v_tSteps+v_pourTime"
print "system should run for ${pourSteps} steps"
variable tempMaxz equal bound(pouredParts,zmax) 


run_style verlet



compute 2 all temp
compute_modify	thermo_temp dynamic yes

variable SS equal round(1/${dtt})
variable fpout equal "round(v_SS)"

thermo_style	custom step atoms v_tempMaxz
thermo		${fpout}
thermo_modify	lost ignore norm no
# thermo_modify  temp 2

#use type type for color by type or type v_mol3 for diff colors
variable        colors string "red green blue yellow white purple pink orange lime gray"
variable mol3 atom mol%10
dump		1 all movie ${fpout} ${mainDir}/${nPartsSTR}/FillContainer.mpg v_mol3 type &
            axes yes 0.8 0.02 view 80 -30 zoom 1.5
dump_modify 1 adiam 1 ${diam} adiam 2 ${diam} adiam 3 ${diam}
dump_modify 1 pad 18 amap 0 10 sa 1 10 ${colors}
run		${pourSteps}

write_dump all custom ${mainDir}/${nPartsSTR}/lastFramePour.txt id type x y z fx fy fz
undump 1

run 1
##############################shake code############################
# print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"
unfix wallout
unfix bott
print "!!!!!!!!!!!!!!!!!!!!!!!!!!!"
# using sim units derived from plastic spheres




print "\n\nCRUSHSTEPS: ${crushsteps}\n\n"
fix		wallout all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zcylinder ${R} wiggle z ${maxAmp} ${period}   #integrator type
fix    	bott    all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zplane 0 NULL wiggle z ${maxAmp} ${period} #integrator type


dump		2 all movie ${fpout} ${mainDir}/${nPartsSTR}/crushMovie.mpg v_mol3 type &
	            axes yes 0.8 0.02 view 80 -30 zoom 1.5
dump_modify 2 adiam 1 ${diam} adiam 2 ${diam} adiam 3 ${diam} 
dump_modify 2 pad 18 amap 0 10 sa 1 10 ${colors}
run		${crushsteps}

undump 2
unfix wallout
unfix bott


fix		wallout all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zcylinder ${R}  #integrator type
fix    	bott    all wall/gran hertz/history ${kn} NULL ${g_n} NULL ${mup} 1 zplane 0 NULL  #integrator type

run		${settleTime}

compute cnk all chunk/atom molecule
compute myChunk all com/chunk cnk
compute myChunk1 all property/chunk cnk count

fix comOut all ave/time 1 2 2 c_myChunk1 c_myChunk[*] file ${mainDir}/${nPartsSTR}/finalHeight.txt mode vector
write_dump all custom ${mainDir}/${nPartsSTR}/lastFrameEnd.txt id type x y z fx fy fz 
run 2




